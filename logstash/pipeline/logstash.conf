input {
  file {
    path => "/usr/share/logstash/data/access_log_jul95.txt"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => plain { charset => "UTF-8" }
  }
}

filter {
  # Парсим CLF стандартным COMMONAPACHELOG
  grok {
    match => { "message" => "%{COMMONAPACHELOG}" }
  }

  # Преобразуем timestamp в @timestamp
  date {
    match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
    target => "@timestamp"
    remove_field => ["timestamp"]
  }

  # bytes может быть "-" в некоторых логах — заменим на 0 перед конвертацией
  if [bytes] == "-" {
    mutate { replace => { "bytes" => "0" } }
  }

  # Попробуем разбить request на method и request_path + httpversion 
  if [request] {
    grok {
      match => { "request" => "%{WORD:method} %{NOTSPACE:request_path}(?: HTTP/%{NUMBER:httpversion})?" }
      # не ломаем основную схему при ошибке
      break_on_match => false
    }
  }

  mutate {
    convert => {
      "response" => "integer"
      "bytes"    => "integer"
    }
    # добавим значение по умолчанию для httpversion если не найдено
    add_field => { "httpversion" => "%{httpversion}" }
  }

  # удаляем служебные поля
  mutate { remove_field => ["tags","message"] }
}

output {
  opensearch {
    hosts => ["http://opensearch-server:9200"]
    user => "admin"
    password => "admin"
    index => "web-logs-%{+YYYY.MM.dd}"
   
    # template_overwrite => false
  }
  stdout { codec => rubydebug }
}
